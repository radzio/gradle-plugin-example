group = artifact_group
version = "${artifact_version}.${build_number}"

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: "org.jetbrains.kotlin.jvm"

repositories {
    mavenCentral()
    jcenter()
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.4-3"
    }
}

dependencies {
    compileOnly gradleApi()
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.1.4-3'
    implementation 'com.sendgrid:sendgrid-java:4.1.0'
    compile localGroovy()

    testCompileOnly  gradleTestKit()
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.6.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
}

test {
    // Always run the tests
    outputs.upToDateWhen { false }

    // Turn on some console logging
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        stackTraceFilters "entryPoint"
    }
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

// Add the classpath file to the test runtime classpath
dependencies {
    testRuntime files(createClasspathManifest)
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

